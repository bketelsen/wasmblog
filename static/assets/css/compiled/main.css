/*! Congo v2.1.0 | MIT License | https://github.com/jpanther/congo */

/* Congo scheme */

:root {
  --color-neutral: 255, 255, 255;
  /* Gray */
  --color-neutral-50: 250, 250, 250;
  --color-neutral-100: 244, 244, 245;
  --color-neutral-200: 228, 228, 231;
  --color-neutral-300: 212, 212, 216;
  --color-neutral-400: 161, 161, 170;
  --color-neutral-500: 113, 113, 122;
  --color-neutral-600: 82, 82, 91;
  --color-neutral-700: 63, 63, 70;
  --color-neutral-800: 39, 39, 42;
  --color-neutral-900: 24, 24, 27;
  /* Violet */
  --color-primary-50: 245, 243, 255;
  --color-primary-100: 237, 233, 254;
  --color-primary-200: 221, 214, 254;
  --color-primary-300: 196, 181, 253;
  --color-primary-400: 167, 139, 250;
  --color-primary-500: 139, 92, 246;
  --color-primary-600: 124, 58, 237;
  --color-primary-700: 109, 40, 217;
  --color-primary-800: 91, 33, 182;
  --color-primary-900: 76, 29, 149;
  /* Fuchsia */
  --color-secondary-50: 253, 244, 255;
  --color-secondary-100: 250, 232, 255;
  --color-secondary-200: 245, 208, 254;
  --color-secondary-300: 240, 171, 252;
  --color-secondary-400: 232, 121, 249;
  --color-secondary-500: 217, 70, 239;
  --color-secondary-600: 192, 38, 211;
  --color-secondary-700: 162, 28, 175;
  --color-secondary-800: 134, 25, 143;
  --color-secondary-900: 112, 26, 117;
}

/*! tailwindcss v3.0.23 | MIT License | https://tailwindcss.com */

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/*
Ensure the default browser behavior of the `hidden` attribute.
*/

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.prose {
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.prose :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.prose :where(a):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
  -webkit-text-decoration-color: rgb(var(--color-primary-300));
          text-decoration-color: rgb(var(--color-primary-300));
}

.prose :where(a):not(:where([class~="not-prose"] *)):hover {
  color: rgb(var(--color-neutral));
  text-decoration: none;
  background-color: rgb(var(--color-primary-600));
  border-radius: 0.09rem;
}

.prose :where(strong):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.prose :where(ol):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
  padding-left: 1.625em;
}

.prose :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type="A" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type="I" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type="i" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
}

.prose :where(ul):not(:where([class~="not-prose"] *)) {
  list-style-type: disc;
  padding-left: 1.625em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.prose :where(ul > li):not(:where([class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}

.prose :where(hr):not(:where([class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.prose :where(blockquote):not(:where([class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before {
  content: open-quote;
}

.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after {
  content: close-quote;
}

.prose :where(h1):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.prose :where(h1 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 900;
}

.prose :where(h2):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.prose :where(h2 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 800;
}

.prose :where(h3):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.prose :where(h3 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
}

.prose :where(h4):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.prose :where(h4 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
}

.prose :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose :where(figcaption):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.prose :where(code):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.prose :where(code):not(:where([class~="not-prose"] *))::before {
  content: "`";
}

.prose :where(code):not(:where([class~="not-prose"] *))::after {
  content: "`";
}

.prose :where(a code):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-code);
}

.prose :where(pre):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}

.prose :where(pre code):not(:where([class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.prose :where(pre code):not(:where([class~="not-prose"] *))::before {
  content: none;
}

.prose :where(pre code):not(:where([class~="not-prose"] *))::after {
  content: none;
}

.prose :where(table):not(:where([class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.prose :where(thead):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.prose :where(thead th):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.prose :where(tbody tr):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 0;
}

.prose :where(tbody td):not(:where([class~="not-prose"] *)) {
  vertical-align: baseline;
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.prose {
  --tw-prose-body: rgb(var(--color-neutral-700));
  --tw-prose-headings: rgb(var(--color-neutral-800));
  --tw-prose-lead: rgb(var(--color-neutral-500));
  --tw-prose-links: rgb(var(--color-primary-700));
  --tw-prose-bold: rgb(var(--color-neutral-900));
  --tw-prose-counters: rgb(var(--color-neutral-800));
  --tw-prose-bullets: rgb(var(--color-neutral-500));
  --tw-prose-hr: rgb(var(--color-neutral-200));
  --tw-prose-quotes: rgb(var(--color-neutral-700));
  --tw-prose-quote-borders: rgb(var(--color-primary-200));
  --tw-prose-captions: rgb(var(--color-neutral-500));
  --tw-prose-code: rgb(var(--color-secondary-700));
  --tw-prose-pre-code: rgb(var(--color-neutral-700));
  --tw-prose-pre-bg: rgb(var(--color-neutral-50));
  --tw-prose-th-borders: rgb(var(--color-neutral-500));
  --tw-prose-td-borders: rgb(var(--color-neutral-300));
  --tw-prose-invert-body: rgb(var(--color-neutral-300));
  --tw-prose-invert-headings: rgb(var(--color-neutral-50));
  --tw-prose-invert-lead: rgb(var(--color-neutral-500));
  --tw-prose-invert-links: rgb(var(--color-primary-400));
  --tw-prose-invert-bold: rgb(var(--color-neutral));
  --tw-prose-invert-counters: rgb(var(--color-neutral-400));
  --tw-prose-invert-bullets: rgb(var(--color-neutral-600));
  --tw-prose-invert-hr: rgb(var(--color-neutral-500));
  --tw-prose-invert-quotes: rgb(var(--color-neutral-200));
  --tw-prose-invert-quote-borders: rgb(var(--color-primary-900));
  --tw-prose-invert-captions: rgb(var(--color-neutral-400));
  --tw-prose-invert-code: rgb(var(--color-secondary-400));
  --tw-prose-invert-pre-code: rgb(var(--color-neutral-200));
  --tw-prose-invert-pre-bg: rgb(var(--color-neutral-700));
  --tw-prose-invert-th-borders: rgb(var(--color-neutral-500));
  --tw-prose-invert-td-borders: rgb(var(--color-neutral-700));
  font-size: 1rem;
  line-height: 1.75;
}

.prose :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(video):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(h2 code):not(:where([class~="not-prose"] *)) {
  font-size: 0.875em;
}

.prose :where(h3 code):not(:where([class~="not-prose"] *)) {
  font-size: 0.9em;
}

.prose :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.prose :where(ul > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.prose > :where(ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose > :where(ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose > :where(ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose > :where(ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose > :where(ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.prose :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.prose :where(tbody td:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.prose :where(tbody td:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.prose > :where(:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose > :where(:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose :where(kbd):not(:where([class~="not-prose"] *)) {
  background-color: rgb(var(--color-neutral-200));
  padding: 0.1rem 0.4rem;
  border-radius: 0.25rem;
  font-size: 0.9rem;
  font-weight: 600;
}

.prose :where(mark):not(:where([class~="not-prose"] *)) {
  color: rgb(var(--color-neutral-800));
  background-color: rgb(var(--color-secondary-200));
  padding: 0.1rem 0.2rem;
  border-radius: 0.12rem;
}

body a, body button {
  transition-property: color, background-color, border-color, fill, stroke, -webkit-text-decoration-color;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, -webkit-text-decoration-color;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

/* Scale SVG icons to text size */

.icon svg {
  height: 1em;
  width: 1em;
}

/* Search */

#search-query::-webkit-search-cancel-button, #search-query::-webkit-search-decoration, #search-query::-webkit-search-results-button, #search-query::-webkit-search-results-decoration {
  display: none;
}

/* RTL support */

[dir="rtl"] .prose blockquote {
  border-left-width: 0px;
  border-right-width: 4px;
  padding-right: 1rem;
}

[dir="rtl"] .prose ul > li, [dir="rtl"] .prose ol > li {
  margin-right: 1.75rem;
  padding-left: 0px;
  padding-right: 0.5rem;
}

[dir="rtl"] .prose ol > li:before, [dir="rtl"] .prose ul > li:before {
  left: auto;
  right: 0.25rem;
}

[dir="rtl"] .prose thead td:first-child, [dir="rtl"] .prose thead th:first-child {
  padding-right: 0px;
}

[dir="rtl"] .prose thead td:last-child, [dir="rtl"] .prose thead th:last-child {
  padding-left: 0px;
}

/* Table of Contents */

.toc ul, .toc li {
  list-style-type: none;
  padding-left: 0px;
  padding-right: 0px;
  line-height: 1.375;
}

[dir="ltr"] .toc ul ul {
  padding-left: 1rem;
}

[dir="rtl"] .toc ul ul {
  padding-right: 1rem;
}

.toc a {
  font-weight: 400;
  --tw-text-opacity: 1;
  color: rgba(var(--color-neutral-700), var(--tw-text-opacity));
}

.dark .toc a {
  --tw-text-opacity: 1;
  color: rgba(var(--color-neutral-400), var(--tw-text-opacity));
}

[dir="rtl"] .toc ul > li {
  margin-right: 0px;
}

/* Code Copy */

.highlight-wrapper {
  display: block;
}

.highlight {
  position: relative;
  z-index: 0;
}

.highlight:hover > .copy-button {
  visibility: visible;
}

.copy-button {
  visibility: hidden;
  position: absolute;
  top: 0px;
  right: 0px;
  z-index: 10;
  width: 5rem;
  cursor: pointer;
  white-space: nowrap;
  border-bottom-left-radius: 0.375rem;
  border-top-right-radius: 0.375rem;
  --tw-bg-opacity: 1;
  background-color: rgba(var(--color-neutral-200), var(--tw-bg-opacity));
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tw-text-opacity: 1;
  color: rgba(var(--color-neutral-700), var(--tw-text-opacity));
  opacity: 0.9;
}

.dark .copy-button {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--color-neutral-600), var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgba(var(--color-neutral-200), var(--tw-text-opacity));
}

.copy-button:hover, .copy-button:focus, .copy-button:active, .copy-button:active:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--color-primary-100), var(--tw-bg-opacity));
}

.dark .copy-button:hover, .dark .copy-button:focus, .dark .copy-button:active, .dark .copy-button:active:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--color-primary-600), var(--tw-bg-opacity));
}

.copy-textarea {
  position: absolute;
  z-index: -10;
  opacity: 0.05;
}

/* -- Chroma Highlight -- */

/* Background */

.prose .chroma {
  position: static;
  border-radius: 0.375rem;
  --tw-bg-opacity: 1;
  background-color: rgba(var(--color-neutral-50), var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgba(var(--color-neutral-700), var(--tw-text-opacity));
}

.dark .prose .chroma {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--color-neutral-700), var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgba(var(--color-neutral-200), var(--tw-text-opacity));
}

/* LineTableTD */

.chroma .lntd, .chroma .lntd pre {
  margin: 0px;
  border-style: none;
  padding: 0px;
  vertical-align: top;
}

/* LineTable */

.chroma .lntable {
  display: block;
  width: auto;
  overflow: hidden;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  font-size: 1rem;
  line-height: 1.5rem;
  border-spacing: 0;
}

/* LineHighlight */

.chroma .hl {
  margin-left: -1rem;
  margin-right: -1rem;
  display: block;
  width: auto;
  --tw-bg-opacity: 1;
  background-color: rgba(var(--color-primary-100), var(--tw-bg-opacity));
  padding-left: 1rem;
  padding-right: 1rem;
}

.dark .chroma .hl {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--color-primary-900), var(--tw-bg-opacity));
}

.chroma .lntd .hl {
  margin: 0px;
  padding: 0px;
}

/* LineNumbersTable */

/* LineNumbers */

.chroma .lnt, .chroma .ln {
  margin-right: 0.4em;
  padding-left: 0.4em;
  padding-right: 0.4em;
  padding-top: 0px;
  padding-bottom: 0px;
  --tw-text-opacity: 1;
  color: rgba(var(--color-neutral-600), var(--tw-text-opacity));
}

.dark .chroma .lnt, .dark .chroma .ln {
  --tw-text-opacity: 1;
  color: rgba(var(--color-neutral-300), var(--tw-text-opacity));
}

/* Keyword */

/* KeywordDeclaration */

/* KeywordNamespace */

/* KeywordPseudo */

/* KeywordReserved */

/* NameClass */

/* NameFunctionMagic */

/* NameNamespace */

/* NameVariableClass */

/* Operator */

.chroma .k, .chroma .kd, .chroma .kn, .chroma .kp, .chroma .kr, .chroma .nc, .chroma .fm, .chroma .nn, .chroma .vc, .chroma .o {
  --tw-text-opacity: 1;
  color: rgba(var(--color-primary-600), var(--tw-text-opacity));
}

.dark .chroma .k, .dark .chroma .kd, .dark .chroma .kn, .dark .chroma .kp, .dark .chroma .kr, .dark .chroma .nc, .dark .chroma .fm, .dark .chroma .nn, .dark .chroma .vc, .dark .chroma .o {
  --tw-text-opacity: 1;
  color: rgba(var(--color-primary-300), var(--tw-text-opacity));
}

/* KeywordConstant */

.chroma .kc {
  font-weight: 600;
  --tw-text-opacity: 1;
  color: rgba(var(--color-secondary-400), var(--tw-text-opacity));
}

.dark .chroma .kc {
  --tw-text-opacity: 1;
  color: rgba(var(--color-secondary-500), var(--tw-text-opacity));
}

/* KeywordType */

/* NameVariable */

/* NameVariableInstance */

/* NameVariableMagic */

/* LiteralNumber */

/* LiteralNumberBin */

/* LiteralNumberFloat */

/* LiteralNumberHex */

/* LiteralNumberInteger */

/* LiteralNumberIntegerLong */

/* LiteralNumberOct */

.chroma .kt, .chroma .nv, .chroma .vi, .chroma .vm, .chroma .m, .chroma .mb, .chroma .mf, .chroma .mh, .chroma .mi, .chroma .il, .chroma .mo {
  --tw-text-opacity: 1;
  color: rgba(var(--color-secondary-400), var(--tw-text-opacity));
}

.dark .chroma .kt, .dark .chroma .nv, .dark .chroma .vi, .dark .chroma .vm, .dark .chroma .m, .dark .chroma .mb, .dark .chroma .mf, .dark .chroma .mh, .dark .chroma .mi, .dark .chroma .il, .dark .chroma .mo {
  --tw-text-opacity: 1;
  color: rgba(var(--color-secondary-600), var(--tw-text-opacity));
}

/* Name */

/* NameDecorator */

/* NameEntity */

/* NameLabel */

.chroma .n, .chroma .nd, .chroma .ni, .chroma .nl {
  --tw-text-opacity: 1;
  color: rgba(var(--color-secondary-900), var(--tw-text-opacity));
}

.dark .chroma .n, .dark .chroma .nd, .dark .chroma .ni, .dark .chroma .nl {
  --tw-text-opacity: 1;
  color: rgba(var(--color-secondary-200), var(--tw-text-opacity));
}

/* NameAttribute */

/* NameBuiltin */

/* NameBuiltinPseudo */

/* NameOther */

/* NameProperty */

/* NameTag */

.chroma .na, .chroma .nb, .chroma .bp, .chroma .nx, .chroma .py, .chroma .nt {
  --tw-text-opacity: 1;
  color: rgba(var(--color-secondary-800), var(--tw-text-opacity));
}

.dark .chroma .na, .dark .chroma .nb, .dark .chroma .bp, .dark .chroma .nx, .dark .chroma .py, .dark .chroma .nt {
  --tw-text-opacity: 1;
  color: rgba(var(--color-secondary-300), var(--tw-text-opacity));
}

/* NameConstant */

/* NameException */

/* NameVariableGlobal */

.chroma .no, .chroma .ne, .chroma .vg {
  font-weight: 600;
  --tw-text-opacity: 1;
  color: rgba(var(--color-secondary-400), var(--tw-text-opacity));
}

.dark .chroma .no, .dark .chroma .ne, .dark .chroma .vg {
  --tw-text-opacity: 1;
  color: rgba(var(--color-secondary-500), var(--tw-text-opacity));
}

/* NameFunction */

.chroma .nf {
  --tw-text-opacity: 1;
  color: rgba(var(--color-secondary-600), var(--tw-text-opacity));
}

.dark .chroma .nf {
  --tw-text-opacity: 1;
  color: rgba(var(--color-secondary-500), var(--tw-text-opacity));
}

/* Literal */

/* LiteralDate */

/* LiteralString */

/* LiteralStringAffix */

/* LiteralStringBacktick */

/* LiteralStringChar */

/* LiteralStringDelimiter */

/* LiteralStringDoc */

/* LiteralStringDouble */

/* LiteralStringHeredoc */

/* LiteralStringInterpol */

/* LiteralStringOther */

/* LiteralStringSingle */

/* GenericInserted */

/* GenericOutput */

/* GenericPrompt */

.chroma .l, .chroma .ld, .chroma .s, .chroma .sa, .chroma .sb, .chroma .sc, .chroma .dl, .chroma .sd, .chroma .s2, .chroma .sh, .chroma .si, .chroma .sx, .chroma .s1, .chroma .gi, .chroma .go, .chroma .gp {
  --tw-text-opacity: 1;
  color: rgba(var(--color-primary-800), var(--tw-text-opacity));
}

.dark .chroma .l, .dark .chroma .ld, .dark .chroma .s, .dark .chroma .sa, .dark .chroma .sb, .dark .chroma .sc, .dark .chroma .dl, .dark .chroma .sd, .dark .chroma .s2, .dark .chroma .sh, .dark .chroma .si, .dark .chroma .sx, .dark .chroma .s1, .dark .chroma .gi, .dark .chroma .go, .dark .chroma .gp {
  --tw-text-opacity: 1;
  color: rgba(var(--color-primary-400), var(--tw-text-opacity));
}

/* LiteralStringEscape */

.chroma .se {
  font-weight: 600;
  --tw-text-opacity: 1;
  color: rgba(var(--color-secondary-400), var(--tw-text-opacity));
}

.dark .chroma .se {
  --tw-text-opacity: 1;
  color: rgba(var(--color-secondary-500), var(--tw-text-opacity));
}

/* LiteralStringRegex */

/* LiteralStringSymbol */

.chroma .sr, .chroma .ss {
  font-weight: 600;
  --tw-text-opacity: 1;
  color: rgba(var(--color-primary-800), var(--tw-text-opacity));
}

.dark .chroma .sr, .dark .chroma .ss {
  --tw-text-opacity: 1;
  color: rgba(var(--color-primary-400), var(--tw-text-opacity));
}

/* OperatorWord */

.chroma .ow {
  font-weight: 600;
  --tw-text-opacity: 1;
  color: rgba(var(--color-primary-400), var(--tw-text-opacity));
}

.dark .chroma .ow {
  --tw-text-opacity: 1;
  color: rgba(var(--color-primary-600), var(--tw-text-opacity));
}

/* Comment */

/* CommentMultiline */

/* CommentSingle */

/* CommentSpecial */

/* CommentPreproc */

/* CommentPreprocFile */

.chroma .c, .chroma .cm, .chroma .c1, .chroma .cs, .chroma .cp, .chroma .cpf {
  font-style: italic;
  --tw-text-opacity: 1;
  color: rgba(var(--color-neutral-500), var(--tw-text-opacity));
}

.dark .chroma .c, .dark .chroma .cm, .dark .chroma .c1, .dark .chroma .cs, .dark .chroma .cp, .dark .chroma .cpf {
  --tw-text-opacity: 1;
  color: rgba(var(--color-neutral-400), var(--tw-text-opacity));
}

/* CommentHashbang */

.chroma .ch {
  font-weight: 600;
  font-style: italic;
  --tw-text-opacity: 1;
  color: rgba(var(--color-neutral-500), var(--tw-text-opacity));
}

.dark .chroma .ch {
  --tw-text-opacity: 1;
  color: rgba(var(--color-neutral-400), var(--tw-text-opacity));
}

/* GenericEmph */

.chroma .ge {
  font-style: italic;
}

/* GenericHeading */

.chroma .gh {
  font-weight: 600;
  --tw-text-opacity: 1;
  color: rgba(var(--color-neutral-500), var(--tw-text-opacity));
}

/* GenericStrong */

.chroma .gs {
  font-weight: 600;
}

/* GenericSubheading */

/* GenericTraceback */

.chroma .gu, .chroma .gt {
  --tw-text-opacity: 1;
  color: rgba(var(--color-neutral-500), var(--tw-text-opacity));
}

/* GenericUnderline */

.chroma .gl {
  -webkit-text-decoration-line: underline;
          text-decoration-line: underline;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.m-auto {
  margin: auto;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.mb-3 {
  margin-bottom: 0.75rem;
}

.mb-1 {
  margin-bottom: 0.25rem;
}

.mb-0 {
  margin-bottom: 0px;
}

.mt-3 {
  margin-top: 0.75rem;
}

.mt-6 {
  margin-top: 1.5rem;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mt-0 {
  margin-top: 0px;
}

.mt-8 {
  margin-top: 2rem;
}

.mb-12 {
  margin-bottom: 3rem;
}

.ml-10 {
  margin-left: 2.5rem;
}

.mt-4 {
  margin-top: 1rem;
}

.mt-12 {
  margin-top: 3rem;
}

.mt-5 {
  margin-top: 1.25rem;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.flex {
  display: flex;
}

.grid {
  display: grid;
}

.hidden {
  display: none;
}

.h-screen {
  height: 100vh;
}

.h-10 {
  height: 2.5rem;
}

.h-20 {
  height: 5rem;
}

.min-h-0 {
  min-height: 0px;
}

.w-full {
  width: 100%;
}

.w-auto {
  width: auto;
}

.w-20 {
  width: 5rem;
}

.min-w-0 {
  min-width: 0px;
}

.max-w-full {
  max-width: 100%;
}

.max-w-7xl {
  max-width: 80rem;
}

.max-w-3xl {
  max-width: 48rem;
}

.max-w-lg {
  max-width: 32rem;
}

.max-w-prose {
  max-width: 65ch;
}

.flex-shrink-0 {
  flex-shrink: 0;
}

.grow {
  flex-grow: 1;
}

.-translate-y-8 {
  --tw-translate-y: -2rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.list-none {
  list-style-type: none;
}

.appearance-none {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.items-start {
  align-items: flex-start;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-4 {
  gap: 1rem;
}

.gap-16 {
  gap: 4rem;
}

.space-x-8 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(2rem * var(--tw-space-x-reverse));
  margin-left: calc(2rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-6 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1.5rem * var(--tw-space-x-reverse));
  margin-left: calc(1.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.divide-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(2px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(2px * var(--tw-divide-y-reverse));
}

.divide-gray-200 > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-divide-opacity));
}

.self-center {
  align-self: center;
}

.overflow-hidden {
  overflow: hidden;
}

.scroll-smooth {
  scroll-behavior: smooth;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.rounded-md {
  border-radius: 0.375rem;
}

.rounded-3xl {
  border-radius: 1.5rem;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-b-lg {
  border-bottom-right-radius: 0.5rem;
  border-bottom-left-radius: 0.5rem;
}

.border {
  border-width: 1px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-gray-300 {
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity));
}

.border-transparent {
  border-color: transparent;
}

.border-indigo-500 {
  --tw-border-opacity: 1;
  border-color: rgb(99 102 241 / var(--tw-border-opacity));
}

.border-white {
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
}

.bg-neutral {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--color-neutral), var(--tw-bg-opacity));
}

.bg-primary-200 {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--color-primary-200), var(--tw-bg-opacity));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-indigo-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(79 70 229 / var(--tw-bg-opacity));
}

.bg-sky-800 {
  --tw-bg-opacity: 1;
  background-color: rgb(7 89 133 / var(--tw-bg-opacity));
}

.bg-indigo-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(99 102 241 / var(--tw-bg-opacity));
}

.bg-primary-100 {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--color-primary-100), var(--tw-bg-opacity));
}

.bg-yellow-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 240 138 / var(--tw-bg-opacity));
}

.bg-green-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(187 247 208 / var(--tw-bg-opacity));
}

.bg-blue-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(191 219 254 / var(--tw-bg-opacity));
}

.bg-gray-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / var(--tw-bg-opacity));
}

.bg-gradient-to-r {
  background-image: linear-gradient(to right, var(--tw-gradient-stops));
}

.from-sky-800 {
  --tw-gradient-from: #075985;
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgb(7 89 133 / 0));
}

.to-cyan-600 {
  --tw-gradient-to: #0891b2;
}

.p-4 {
  padding: 1rem;
}

.p-6 {
  padding: 1.5rem;
}

.py-10 {
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.py-6 {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.py-12 {
  padding-top: 3rem;
  padding-bottom: 3rem;
}

.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.pb-4 {
  padding-bottom: 1rem;
}

.pt-10 {
  padding-top: 2.5rem;
}

.pb-20 {
  padding-bottom: 5rem;
}

.pt-16 {
  padding-top: 4rem;
}

.pt-8 {
  padding-top: 2rem;
}

.pb-24 {
  padding-bottom: 6rem;
}

.text-center {
  text-align: center;
}

.align-text-bottom {
  vertical-align: text-bottom;
}

.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.text-4xl {
  font-size: 2.25rem;
  line-height: 2.5rem;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.font-medium {
  font-weight: 500;
}

.font-bold {
  font-weight: 700;
}

.font-semibold {
  font-weight: 600;
}

.font-extrabold {
  font-weight: 800;
}

.leading-7 {
  line-height: 1.75rem;
}

.tracking-tight {
  letter-spacing: -0.025em;
}

.text-neutral-500 {
  --tw-text-opacity: 1;
  color: rgba(var(--color-neutral-500), var(--tw-text-opacity));
}

.text-neutral-900 {
  --tw-text-opacity: 1;
  color: rgba(var(--color-neutral-900), var(--tw-text-opacity));
}

.text-primary-600 {
  --tw-text-opacity: 1;
  color: rgba(var(--color-primary-600), var(--tw-text-opacity));
}

.text-gray-900 {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}

.text-gray-500 {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

.text-indigo-600 {
  --tw-text-opacity: 1;
  color: rgb(79 70 229 / var(--tw-text-opacity));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.text-indigo-100 {
  --tw-text-opacity: 1;
  color: rgb(224 231 255 / var(--tw-text-opacity));
}

.text-gray-600 {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity));
}

.text-gray-700 {
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

.text-neutral-800 {
  --tw-text-opacity: 1;
  color: rgba(var(--color-neutral-800), var(--tw-text-opacity));
}

.text-primary-500 {
  --tw-text-opacity: 1;
  color: rgba(var(--color-primary-500), var(--tw-text-opacity));
}

.text-primary-400 {
  --tw-text-opacity: 1;
  color: rgba(var(--color-primary-400), var(--tw-text-opacity));
}

.text-yellow-500 {
  --tw-text-opacity: 1;
  color: rgb(234 179 8 / var(--tw-text-opacity));
}

.text-green-500 {
  --tw-text-opacity: 1;
  color: rgb(34 197 94 / var(--tw-text-opacity));
}

.text-blue-500 {
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity));
}

.underline {
  -webkit-text-decoration-line: underline;
          text-decoration-line: underline;
}

.decoration-primary-500 {
  -webkit-text-decoration-color: rgb(var(--color-primary-500));
          text-decoration-color: rgb(var(--color-primary-500));
}

.placeholder-gray-500::-moz-placeholder {
  --tw-placeholder-opacity: 1;
  color: rgb(107 114 128 / var(--tw-placeholder-opacity));
}

.placeholder-gray-500:-ms-input-placeholder {
  --tw-placeholder-opacity: 1;
  color: rgb(107 114 128 / var(--tw-placeholder-opacity));
}

.placeholder-gray-500::placeholder {
  --tw-placeholder-opacity: 1;
  color: rgb(107 114 128 / var(--tw-placeholder-opacity));
}

.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.hover\:bg-indigo-700:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(67 56 202 / var(--tw-bg-opacity));
}

.hover\:bg-indigo-400:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(129 140 248 / var(--tw-bg-opacity));
}

.hover\:bg-gray-50:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity));
}

.hover\:text-indigo-500:hover {
  --tw-text-opacity: 1;
  color: rgb(99 102 241 / var(--tw-text-opacity));
}

.hover\:text-indigo-50:hover {
  --tw-text-opacity: 1;
  color: rgb(238 242 255 / var(--tw-text-opacity));
}

.hover\:underline:hover {
  -webkit-text-decoration-line: underline;
          text-decoration-line: underline;
}

.hover\:decoration-2:hover {
  text-decoration-thickness: 2px;
}

.hover\:underline-offset-2:hover {
  text-underline-offset: 2px;
}

.focus\:translate-y-0:focus {
  --tw-translate-y: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.focus\:border-indigo-500:focus {
  --tw-border-opacity: 1;
  border-color: rgb(99 102 241 / var(--tw-border-opacity));
}

.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus\:ring-2:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-indigo-500:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(99 102 241 / var(--tw-ring-opacity));
}

.focus\:ring-white:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(255 255 255 / var(--tw-ring-opacity));
}

.focus\:ring-offset-2:focus {
  --tw-ring-offset-width: 2px;
}

.focus\:ring-offset-indigo-700:focus {
  --tw-ring-offset-color: #4338ca;
}

[dir="ltr"] .ltr\:pr-2 {
  padding-right: 0.5rem;
}

[dir="ltr"] .ltr\:pr-3 {
  padding-right: 0.75rem;
}

[dir="ltr"] .ltr\:text-right {
  text-align: right;
}

[dir="rtl"] .rtl\:pl-2 {
  padding-left: 0.5rem;
}

[dir="rtl"] .rtl\:pl-3 {
  padding-left: 0.75rem;
}

[dir="rtl"] .rtl\:text-left {
  text-align: left;
}

.dark .dark\:prose-invert {
  --tw-prose-body: var(--tw-prose-invert-body);
  --tw-prose-headings: var(--tw-prose-invert-headings);
  --tw-prose-lead: var(--tw-prose-invert-lead);
  --tw-prose-links: var(--tw-prose-invert-links);
  --tw-prose-bold: var(--tw-prose-invert-bold);
  --tw-prose-counters: var(--tw-prose-invert-counters);
  --tw-prose-bullets: var(--tw-prose-invert-bullets);
  --tw-prose-hr: var(--tw-prose-invert-hr);
  --tw-prose-quotes: var(--tw-prose-invert-quotes);
  --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
  --tw-prose-captions: var(--tw-prose-invert-captions);
  --tw-prose-code: var(--tw-prose-invert-code);
  --tw-prose-pre-code: var(--tw-prose-invert-pre-code);
  --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
  --tw-prose-th-borders: var(--tw-prose-invert-th-borders);
  --tw-prose-td-borders: var(--tw-prose-invert-td-borders);
}

.dark .dark\:prose-invert :where(a):not(:where([class~="not-prose"] *)) {
  -webkit-text-decoration-color: rgb(var(--color-neutral-600));
          text-decoration-color: rgb(var(--color-neutral-600));
}

.dark .dark\:prose-invert :where(kbd):not(:where([class~="not-prose"] *)) {
  color: rgb(var(--color-neutral-200));
  background-color: rgb(var(--color-neutral-700));
}

.dark .dark\:prose-invert :where(mark):not(:where([class~="not-prose"] *)) {
  background-color: rgb(var(--color-secondary-400));
}

.dark .dark\:bg-neutral-800 {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--color-neutral-800), var(--tw-bg-opacity));
}

.dark .dark\:bg-neutral-600 {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--color-neutral-600), var(--tw-bg-opacity));
}

.dark .dark\:bg-primary-900 {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--color-primary-900), var(--tw-bg-opacity));
}

.dark .dark\:bg-yellow-900 {
  --tw-bg-opacity: 1;
  background-color: rgb(113 63 18 / var(--tw-bg-opacity));
}

.dark .dark\:bg-green-900 {
  --tw-bg-opacity: 1;
  background-color: rgb(20 83 45 / var(--tw-bg-opacity));
}

.dark .dark\:bg-blue-900 {
  --tw-bg-opacity: 1;
  background-color: rgb(30 58 138 / var(--tw-bg-opacity));
}

.dark .dark\:bg-gray-900 {
  --tw-bg-opacity: 1;
  background-color: rgb(17 24 39 / var(--tw-bg-opacity));
}

.dark .dark\:text-neutral-400 {
  --tw-text-opacity: 1;
  color: rgba(var(--color-neutral-400), var(--tw-text-opacity));
}

.dark .dark\:text-neutral {
  --tw-text-opacity: 1;
  color: rgba(var(--color-neutral), var(--tw-text-opacity));
}

.dark .dark\:text-primary-400 {
  --tw-text-opacity: 1;
  color: rgba(var(--color-primary-400), var(--tw-text-opacity));
}

.dark .dark\:text-neutral-300 {
  --tw-text-opacity: 1;
  color: rgba(var(--color-neutral-300), var(--tw-text-opacity));
}

@media (min-width: 640px) {
  .sm\:mb-0 {
    margin-bottom: 0px;
  }

  .sm\:mr-7 {
    margin-right: 1.75rem;
  }

  .sm\:mt-4 {
    margin-top: 1rem;
  }

  .sm\:mt-0 {
    margin-top: 0px;
  }

  .sm\:ml-3 {
    margin-left: 0.75rem;
  }

  .sm\:flex {
    display: flex;
  }

  .sm\:inline-flex {
    display: inline-flex;
  }

  .sm\:w-auto {
    width: auto;
  }

  .sm\:w-full {
    width: 100%;
  }

  .sm\:max-w-md {
    max-width: 28rem;
  }

  .sm\:flex-shrink-0 {
    flex-shrink: 0;
  }

  .sm\:flex-row {
    flex-direction: row;
  }

  .sm\:items-center {
    align-items: center;
  }

  .sm\:justify-between {
    justify-content: space-between;
  }

  .sm\:space-x-5 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(1.25rem * var(--tw-space-x-reverse));
    margin-left: calc(1.25rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .sm\:px-14 {
    padding-left: 3.5rem;
    padding-right: 3.5rem;
  }

  .sm\:py-10 {
    padding-top: 2.5rem;
    padding-bottom: 2.5rem;
  }

  .sm\:px-6 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }

  .sm\:py-16 {
    padding-top: 4rem;
    padding-bottom: 4rem;
  }

  .sm\:px-12 {
    padding-left: 3rem;
    padding-right: 3rem;
  }

  .sm\:pt-1 {
    padding-top: 0.25rem;
  }

  .sm\:text-left {
    text-align: left;
  }

  .sm\:text-4xl {
    font-size: 2.25rem;
    line-height: 2.5rem;
  }

  .sm\:text-2xl {
    font-size: 1.5rem;
    line-height: 2rem;
  }

  .sm\:last\:mr-0:last-child {
    margin-right: 0px;
  }

  [dir="ltr"] .ltr\:sm\:mr-7 {
    margin-right: 1.75rem;
  }

  [dir="ltr"] .ltr\:sm\:last\:mr-0:last-child {
    margin-right: 0px;
  }

  [dir="rtl"] .rtl\:sm\:ml-7 {
    margin-left: 1.75rem;
  }

  [dir="rtl"] .rtl\:sm\:last\:ml-0:last-child {
    margin-left: 0px;
  }
}

@media (min-width: 768px) {
  .md\:px-24 {
    padding-left: 6rem;
    padding-right: 6rem;
  }
}

@media (min-width: 1024px) {
  .lg\:col-span-2 {
    grid-column: span 2 / span 2;
  }

  .lg\:mt-0 {
    margin-top: 0px;
  }

  .lg\:ml-8 {
    margin-left: 2rem;
  }

  .lg\:block {
    display: block;
  }

  .lg\:flex {
    display: flex;
  }

  .lg\:grid {
    display: grid;
  }

  .lg\:hidden {
    display: none;
  }

  .lg\:w-0 {
    width: 0px;
  }

  .lg\:max-w-7xl {
    max-width: 80rem;
  }

  .lg\:max-w-xs {
    max-width: 20rem;
  }

  .lg\:flex-1 {
    flex: 1 1 0%;
  }

  .lg\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .lg\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .lg\:flex-row {
    flex-direction: row;
  }

  .lg\:items-center {
    align-items: center;
  }

  .lg\:justify-end {
    justify-content: flex-end;
  }

  .lg\:gap-8 {
    gap: 2rem;
  }

  .lg\:gap-5 {
    gap: 1.25rem;
  }

  .lg\:gap-x-5 {
    -moz-column-gap: 1.25rem;
         column-gap: 1.25rem;
  }

  .lg\:gap-y-12 {
    row-gap: 3rem;
  }

  .lg\:border-none {
    border-style: none;
  }

  .lg\:p-20 {
    padding: 5rem;
  }

  .lg\:px-32 {
    padding-left: 8rem;
    padding-right: 8rem;
  }

  .lg\:px-8 {
    padding-left: 2rem;
    padding-right: 2rem;
  }

  .lg\:py-16 {
    padding-top: 4rem;
    padding-bottom: 4rem;
  }

  .lg\:pt-14 {
    padding-top: 3.5rem;
  }

  .lg\:pb-28 {
    padding-bottom: 7rem;
  }

  .lg\:pt-24 {
    padding-top: 6rem;
  }
}
